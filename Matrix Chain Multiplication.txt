/*Matrix chain multiplication*/
//USING TABURAL METHOD

#include <bits/stdc++.h> 
using namespace std; 

// Matrix Ai has dimension p[i-1] x p[i] 
// for i = 1..n 
int MatrixChainOrder(int p[], int n) 
{ 

	int m[n][n]; 

	int i, j, k, L, q; 

	for (i = 1; i < n; i++) 
		m[i][i] = 0; 

	for (L = 2; L < n; L++) 
	{ 
		for (i = 1; i < n - L + 1; i++) 
		{ 
			j = i + L - 1; 
			m[i][j] = INT_MAX; 
			for (k = i; k <= j - 1; k++) 
			{ 
				// q = cost/scalar multiplications 
				q = m[i][k] + m[k + 1][j] 
					+ p[i - 1] * p[k] * p[j]; 
				if (q < m[i][j]) 
					m[i][j] = q; 
			} 
		} 
	} 

	return m[1][n - 1]; 
} 

int main() 
{ 
	int arr[10],i,size;
    cout<<"\nEnter the size";
    cin>>size;
    cout<<"Enter the matrices dimension array";//P array <35,30,40,50> 35x30,30x40,40x50
    for(i=0;i<size;i++)
       cin>>arr[i]; 

	cout << "Minimum number of multiplications is "
		<< MatrixChainOrder(arr, size); 

	getchar(); 
	return 0; 
} 